name: Build, test and publish Release

on:
  push:
    branches:
      - main

jobs:
  build-test-and-publish-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code of the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update packages
        uses: ./.github/actions/update-packages

      - name: Set environment variables
        uses: ./.github/actions/set-environment-variables
        with:
          build-type: Release

      - name: Install requirements
        uses: ./.github/actions/install-requirements

      - name: Configure
        uses: ./.github/actions/configure

      - name: Build
        uses: ./.github/actions/build

      - name: Test
        uses: ./.github/actions/test

      - name: Create artifact directory
        run: mkdir ${{ env.ARTIFACT_PATH }}

      - name: Move license to artifact directory
        run: mv ${{ github.workspace }}/LICENSE ${{ env.ARTIFACT_PATH }}/LICENSE

      - name: Move third party licenses to artifact directory
        run: mv ${{ env.RELEASE_PATH }}/licenses ${{ env.ARTIFACT_PATH }}/thirdparty

      - name: Move protobuf model to artifact directory
        run: mv ${{ env.BUILD_PATH }}/libebpfdiscoveryproto/ebpfdiscoveryproto ${{ env.ARTIFACT_PATH }}/ebpfdiscoveryproto

      - name: Move binaries to artifact directory
        run: mv ${{ env.BUILD_PATH }}/bin ${{ env.ARTIFACT_PATH }}/bin

      - name: Remove test binaries from artifact directory
        run: find ${{ env.ARTIFACT_PATH }}/* -name 'test*' -exec rm {} \;

      - name: Zip artifact directory contents
        run: |
          cd ${{ env.ARTIFACT_PATH }}
          zip -r ${{ env.ARTIFACT_VERSION }}.zip .

      - name: Publish zip to GitHub OCI registry
        run: |
          cd ${{ env.ARTIFACT_PATH }}
          printf "%s" ${{ secrets.GITHUB_TOKEN }} | docker run --rm -i -v $(pwd):/workspace ghcr.io/oras-project/oras:v1.0.1 push -u ${{ github.actor }} --password-stdin ${{ env.GITHUB_OCI_REGISTRY_ADDRESS }}/${{ env.LOWERCASE_REPOSITORY_NAME }}-linux-x86_64:${{ env.ARTIFACT_VERSION }},latest ${{ env.ARTIFACT_VERSION }}.zip
