# Copyright 2024 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Main push build, test and publish Release"
# The workflow publishes Release with a new patch version with every main branch push

on:
  push:
    branches:
      - main

jobs:
  main-create-timestamp-and-tag:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.createTimestamp.outputs.timestamp }}
    steps:
      - name: "Checkout source code of the repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Create timestamp"
        id: createTimestamp
        uses: ./.github/actions/create-timestamp

      - name: "Set Git identity"
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: "Create a new tag"
        run: |
          currentTagValue=$(git describe --abbrev=0 --tags)
          minor=$(echo $currentTagValue | cut -d '.' -f 2)
          patch=$(echo $currentTagValue | cut -d '.' -f 3)
          newTagValue=1.$(($minor)).$((patch+1))
          git tag -a $newTagValue -m "Main push tagging with $newTagValue"
          echo "Current tag value: $currentTagValue New tag value: $newTagValue" >> $GITHUB_STEP_SUMMARY
          git push origin $newTagValue

  main-push-build-test-and-publish-release:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            arch: x86_64
          - runner: Linux-ARM-Runner
            arch: arm_64
    needs: main-create-timestamp-and-tag
    steps:
      - name: "Checkout source code of the repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Set Git identity"
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: "Build, test and publish Release"
        uses: ./.github/actions/build-test-and-publish-release
        with:
          pat-github-token: ${{ secrets.GITHUB_TOKEN }}
          arch: ${{ matrix.arch }}
          timestamp: ${{ needs.main-create-timestamp-and-tag.outputs.timestamp }}
