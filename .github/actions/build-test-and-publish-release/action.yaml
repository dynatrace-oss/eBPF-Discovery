# Copyright 2024 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Build, test and publish Release"
description: "Builds, tests, and publishes a release"

inputs:
  pat-github-token:
    description: "Personal Access Token for GitHub"
    required: true
  arch:
    description: "Architecture, x86_64 or arm"
    required: true
  timestamp:
    description: "Timestamp in %Y%m%d-%H%M%S format, used in versioning"
    required: true

runs:
  using: "composite"
  steps:
    - name: "Checkout source code of the repository"
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: "Set environment variables"
      uses: ./.github/actions/set-environment-variables
      with:
        build-type: Release
        timestamp: ${{ inputs.timestamp }}

    - name: "Build docker image"
      uses: ./.github/actions/build-docker-image

    - name: "Configure"
      uses: ./.github/actions/configure

    - name: "Build"
      uses: ./.github/actions/build

    - name: "Run unit tests"
      uses: ./.github/actions/run-unit-tests

    - name: "Run component tests"
      uses: ./.github/actions/run-component-tests

    - name: "Create artifact directory"
      shell: bash
      run: mkdir ${{ env.ARTIFACT_PATH }}

    - name: "Move license to artifact directory"
      shell: bash
      run: mv ${{ github.workspace }}/LICENSE ${{ env.ARTIFACT_PATH }}/LICENSE

    - name: "Move third party licenses to artifact directory"
      shell: bash
      run: mv ${{ env.BUILD_PATH }}/licenses ${{ env.ARTIFACT_PATH }}/third_party

    - name: "Move protobuf model to artifact directory"
      shell: bash
      run: mv ${{ env.BUILD_PATH }}/libebpfdiscoveryproto/ebpfdiscoveryproto ${{ env.ARTIFACT_PATH }}/ebpfdiscoveryproto

    - name: "Move binaries to artifact directory"
      shell: bash
      run: mv ${{ env.BUILD_PATH }}/bin ${{ env.ARTIFACT_PATH }}/bin

    - name: "Remove test binaries from artifact directory"
      shell: bash
      run: find ${{ env.ARTIFACT_PATH }}/* -name 'test*' -exec rm {} \;

    - name: "Zip artifact directory contents"
      shell: bash
      run: |
        cd ${{ env.ARTIFACT_PATH }}
        zip -r ${{ env.ARTIFACT_VERSION }}.zip .

    - name: "Publish zip to GitHub OCI registry"
      shell: bash
      run: |
        cd ${{ env.ARTIFACT_PATH }}
        echo ${{ inputs.pat-github-token }} | docker run --rm -i -v $(pwd):/workspace ghcr.io/oras-project/oras:v1.0.1 push -u ${{ github.actor }} --password-stdin ${{ env.GITHUB_OCI_REGISTRY_ADDRESS }}/${{ env.LOWERCASE_REPOSITORY_NAME }}-linux-${{ inputs.arch }}:${{ env.ARTIFACT_VERSION }},latest ${{ env.ARTIFACT_VERSION }}.zip
