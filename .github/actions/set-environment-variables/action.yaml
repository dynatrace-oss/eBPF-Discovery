name: Set environment variables

inputs:
  build-type:
    description: Release or Debug
    required: true
    type: string

runs:
  using: composite
  steps:
    - name: Set environment variables
      shell: bash
      run: |
        buildType=${{ inputs.build-type }}
        printf "BUILD_TYPE=%s\n" "${buildType}" >> $GITHUB_ENV
        
        newestVersion="$(git describe --tags --abbrev=0 --always)"
        if printf "%s" "${newestVersion}" | grep -qEv "[0-9]+\.[0-9]+\.[0-9]+"; then
          newestVersion="0.0.0"
        fi
        printf "PROJECT_VERSION=%s\n" "${newestVersion}" >> $GITHUB_ENV
        
        newestVersionWithTimestamp="${newestVersion}"."$(date +%Y%m%d-%H%M%S)"
        printf "ARTIFACT_VERSION=%s\n" "${newestVersionWithTimestamp}" >> $GITHUB_ENV
        
        printf "BUILD_PATH=%s\n" "${{ github.workspace }}/cmake-build-${buildType,,}" >> $GITHUB_ENV
        
        printf "ARTIFACT_PATH=%s\n" "${{ github.workspace }}/artifact" >> $GITHUB_ENV
        
        repositoryName="$(printf "%s" "${{ github.repository }}" | sed -e "s/^${{ github.repository_owner }}\///")"
        lowercaseRepositoryName="${repositoryName,,}"
        printf "LOWERCASE_REPOSITORY_NAME=%s\n" "${lowercaseRepositoryName}" >> $GITHUB_ENV
        
        githubOCIRegistryAddress=ghcr.io/${{ github.repository_owner }}/"${lowercaseRepositoryName}"
        printf "GITHUB_OCI_REGISTRY_ADDRESS=%s\n" "${githubOCIRegistryAddress}" >> $GITHUB_ENV
